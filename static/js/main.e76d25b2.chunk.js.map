{"version":3,"sources":["data/orders.js","store/store.js","components/ToggleButtons.js","utils/arrays.utils.js","components/DragHandle.js","screens/TopList.js","components/ResponsiveLine.js","screens/TotalOrderVolume.js","components/ResponsiveBar.js","screens/SupplierRank.js","components/TreeItem.js","screens/DeliveryList.js","components/DraggableComponents.js","App.js","serviceWorker.js","index.js"],"names":["orders","supplier","productId","productName","productCategory1","productCategory2","orderedOn","price","quantity","deliveryDate","StoreContext","createContext","initialState","totalQuantityToggle","totalQuantityToggleSuppliers","ordersWithTotalSum","totalOrdersVolume","reducer","state","action","type","useStore","useContext","ToggleButtons","actionType","dispatch","React","useState","toggle","setToggle","className","ToggleButtonGroup","value","exclusive","onChange","event","selectedToggle","console","log","ToggleButton","transformDataForDropdowns","groupName","groupedBySupplier","_","groupBy","map","obj","key","label","transformedSelectedFilters","selectedFilters","filter","groupedBy","array","sumBy","graphType","groupByParametr","transformedWithTotal","x","y","round","DragHandle","sortableHandle","fontSize","SortableElement","groupedByArrayOutput","setGroupedByArrayOutput","sortByArrayOutput","setSortByArrayOutput","useEffect","createdOrders","order","total","totalAndQuantityByKey","groupOrdersBy","grouped","groupByArray","sortBy","numberToDisplay","sortedByValue","orderBy","slice","index","uuidv4","toUpperCase","ResponsiveLineComponent","data","style","height","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","reverse","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","colors","scheme","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","suppliersForFiltering","setSuppliersForFiltering","categoryForFiltering","setCategoryForFiltering","subCategoryForFiltering","setSubCategoryForFiltering","suppliers","setSelectedFilters","filteredOrdersOutput","setFilteredOrdersOutput","length","orderedOnAndTotal","formatedArrayForGraph","push","id","outputArray","category","subCategory","filreredOrdersWithTotalSum","isSupplierFiltered","includes","isCategoryFiltered","isSubCategoryFiltered","placeholder","options","isMulti","e","selectedSuppliers","transformedSelectedSuppliers","prevState","supplierFilterOnChangeHandler","selectedCategories","transformedSelectedCategories","categoryFilterOnChangeHandler","selectedSubCategories","transformedSelectedSubCategories","subCategoryFilterOnChangeHandler","ResponsiveLine","ResponsiveBarComponent","keys","indexBy","padding","defs","background","color","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","modifiers","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","animate","motionStiffness","motionDamping","setData","ResponsiveBar","TreeViewComponent","TreeView","defaultCollapseIcon","defaultExpanded","defaultExpandIcon","renderTree","nodes","TreeItem","nodeId","name","Array","isArray","children","node","groupBySupplier","group","toObject","minHeight","DraggableComponents","SortableContainer","components","Component","props","App","setComponents","useDragHandle","onSortEnd","oldIndex","newIndex","arrayMove","Boolean","window","location","hostname","ReactDOM","render","useReducer","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e76d25b2.chunk.js","sourcesContent":["export const orders = [\n  {\n    supplier: 'Yum Food',\n    productId: '111',\n    productName: 'abc sauce',\n    productCategory1: 'food',\n    productCategory2: 'sauce',\n    orderedOn: '02/01/2020',\n    price: '0.99',\n    quantity: '20',\n    deliveryDate: '02/03/2020'\n  },\n  {\n    supplier: 'Yum Food',\n    productId: '222',\n    productName: 'abc veggie',\n    productCategory1: 'food',\n    productCategory2: 'vegetables',\n    orderedOn: '02/01/2020',\n    price: '3.99',\n    quantity: '40',\n    deliveryDate: '02/03/2020'\n  },\n  {\n    supplier: 'Yum Food',\n    productId: '333',\n    productName: 'abc bread',\n    productCategory1: 'food',\n    productCategory2: 'bread',\n    orderedOn: '02/03/2020',\n    price: '0.49',\n    quantity: '30',\n    deliveryDate: '02/04/2020'\n  },\n  {\n    supplier: 'Yum Food',\n    productId: '444',\n    productName: 'def bread',\n    productCategory1: 'food',\n    productCategory2: 'bread',\n    orderedOn: '02/02/2020',\n    price: '0.49',\n    quantity: '5',\n    deliveryDate: '02/04/2020'\n  },\n  {\n    supplier: 'Yum Food',\n    productId: '444',\n    productName: 'def bread',\n    productCategory1: 'food',\n    productCategory2: 'bread',\n    orderedOn: '02/02/2020',\n    price: '0.49',\n    quantity: '2',\n    deliveryDate: '02/04/2020'\n  },\n  {\n    supplier: 'Yum Food',\n    productId: '123',\n    productName: 'ghi meat',\n    productCategory1: 'food',\n    productCategory2: 'meat',\n    orderedOn: '02/03/2020',\n    price: '4.99',\n    quantity: '15',\n    deliveryDate: '02/04/2020'\n  },\n  {\n    supplier: 'Yum Food',\n    productId: '234',\n    productName: 'ghi steak',\n    productCategory1: 'food',\n    productCategory2: 'meat',\n    orderedOn: '02/04/2020',\n    price: '10.75',\n    quantity: '5',\n    deliveryDate: '02/06/2020'\n  },\n  {\n    supplier: 'Yum Food',\n    productId: '345',\n    productName: 'ghi veggie',\n    productCategory1: 'food',\n    productCategory2: 'vegetables',\n    orderedOn: '02/01/2020',\n    price: '2.98',\n    quantity: '20',\n    deliveryDate: '02/03/2020'\n  },\n  {\n    supplier: 'Yum Food',\n    productId: '456',\n    productName: 'jkl fish',\n    productCategory1: 'food',\n    productCategory2: 'fish',\n    orderedOn: '02/05/2020',\n    price: '4.76',\n    quantity: '10',\n    deliveryDate: '02/07/2020'\n  },\n  {\n    supplier: 'Yum Food',\n    productId: '567',\n    productName: 'jkl egg',\n    productCategory1: 'food',\n    productCategory2: 'egg',\n    orderedOn: '02/03/2020',\n    price: '0.25',\n    quantity: '40',\n    deliveryDate: '02/04/2020'\n  },\n  {\n    supplier: 'Yum Food',\n    productId: '678',\n    productName: 'jkl fruit',\n    productCategory1: 'food',\n    productCategory2: 'fruit',\n    orderedOn: '02/02/2020',\n    price: '1.45',\n    quantity: '23',\n    deliveryDate: '02/04/2020'\n  },\n  {\n    supplier: 'Booz drinks',\n    productId: '555',\n    productName: 'beer A',\n    productCategory1: 'beverages',\n    productCategory2: 'beer',\n    orderedOn: '02/01/2020',\n    price: '3.58',\n    quantity: '10',\n    deliveryDate: '02/03/2020'\n  },\n  {\n    supplier: 'Booz drinks',\n    productId: '545',\n    productName: 'beer B',\n    productCategory1: 'beverages',\n    productCategory2: 'beer',\n    orderedOn: '02/03/2020',\n    price: '3.23',\n    quantity: '5',\n    deliveryDate: '02/04/2020'\n  },\n  {\n    supplier: 'Booz drinks',\n    productId: '546',\n    productName: 'beer C',\n    productCategory1: 'beverages',\n    productCategory2: 'beer',\n    orderedOn: '02/04/2020',\n    price: '3.01',\n    quantity: '8',\n    deliveryDate: '02/06/2020'\n  },\n  {\n    supplier: 'Booz drinks',\n    productId: '547',\n    productName: 'beer D',\n    productCategory1: 'beverages',\n    productCategory2: 'beer',\n    orderedOn: '02/01/2020',\n    price: '3.1',\n    quantity: '9',\n    deliveryDate: '02/03/2020'\n  },\n  {\n    supplier: 'Booz drinks',\n    productId: '548',\n    productName: 'wine A',\n    productCategory1: 'beverages',\n    productCategory2: 'wine',\n    orderedOn: '03/05/2020',\n    price: '8.56',\n    quantity: '5',\n    deliveryDate: '03/07/2020'\n  },\n  {\n    supplier: 'Booz drinks',\n    productId: '549',\n    productName: 'wine B',\n    productCategory1: 'beverages',\n    productCategory2: 'wine',\n    orderedOn: '03/06/2020',\n    price: '9.12',\n    quantity: '8',\n    deliveryDate: '03/08/2020'\n  },\n  {\n    supplier: 'Booz drinks',\n    productId: '560',\n    productName: 'wine C',\n    productCategory1: 'beverages',\n    productCategory2: 'wine',\n    orderedOn: '02/02/2020',\n    price: '9.43',\n    quantity: '3',\n    deliveryDate: '02/04/2020'\n  },\n  {\n    supplier: 'Booz drinks',\n    productId: '561',\n    productName: 'Champagne A',\n    productCategory1: 'beverages',\n    productCategory2: 'champagne',\n    orderedOn: '02/02/2020',\n    price: '50.1',\n    quantity: '2',\n    deliveryDate: '02/04/2020'\n  },\n  {\n    supplier: 'Allstuff supplies',\n    productId: '781',\n    productName: 'soap',\n    productCategory1: 'supplies',\n    productCategory2: 'guest supplies',\n    orderedOn: '02/02/2020',\n    price: '0.33',\n    quantity: '60',\n    deliveryDate: '02/04/2020'\n  },\n  {\n    supplier: 'Allstuff supplies',\n    productId: '781',\n    productName: 'soap',\n    productCategory1: 'supplies',\n    productCategory2: 'guest supplies',\n    orderedOn: '02/04/2020',\n    price: '0.33',\n    quantity: '20',\n    deliveryDate: '02/06/2020'\n  },\n  {\n    supplier: 'Allstuff supplies',\n    productId: '784',\n    productName: 'towel A',\n    productCategory1: 'supplies',\n    productCategory2: 'towel',\n    orderedOn: '02/01/2020',\n    price: '2.97',\n    quantity: '10',\n    deliveryDate: '02/03/2020'\n  },\n  {\n    supplier: 'Allstuff supplies',\n    productId: '784',\n    productName: 'towel B',\n    productCategory1: 'supplies',\n    productCategory2: 'towel',\n    orderedOn: '02/01/2020',\n    price: '2.89',\n    quantity: '40',\n    deliveryDate: '02/03/2020'\n  },\n  {\n    supplier: 'Allstuff supplies',\n    productId: '788',\n    productName: 'pens x100',\n    productCategory1: 'supplies',\n    productCategory2: 'stationary',\n    orderedOn: '02/03/2020',\n    price: '9.99',\n    quantity: '1',\n    deliveryDate: '02/04/2020'\n  },\n  {\n    supplier: 'Allstuff supplies',\n    productId: '789',\n    productName: 'paper A4 x50',\n    productCategory1: 'supplies',\n    productCategory2: 'stationary',\n    orderedOn: '02/06/2020',\n    price: '5.99',\n    quantity: '1',\n    deliveryDate: '02/07/2020'\n  },\n  {\n    supplier: 'Allstuff supplies',\n    productId: '790',\n    productName: 'cutlery',\n    productCategory1: 'supplies',\n    productCategory2: 'glas & china',\n    orderedOn: '02/02/2020',\n    price: '21.02',\n    quantity: '2',\n    deliveryDate: '02/04/2020'\n  },\n  {\n    supplier: 'Allstuff supplies',\n    productId: '791',\n    productName: 'nice glasses',\n    productCategory1: 'supplies',\n    productCategory2: 'glas & china',\n    orderedOn: '02/03/2020',\n    price: '22.55',\n    quantity: '2',\n    deliveryDate: '02/05/2020'\n  }\n]\n","import React, { createContext, useReducer, useContext } from 'react'\r\n\r\nexport const TOTAL_QUANTITY_TOGGLE = 'TOTAL_QUANTITY_TOGGLE'\r\nexport const SET_ORDERS = 'SET_ORDERS'\r\nexport const SET_TOTAL_ORDERS_VOLUME = 'SET_TOTAL_ORDERS_VOLUME'\r\nexport const TOTAL_QUANTITY_TOGGLE_SUPPLIERS = 'TOTAL_QUANTITY_TOGGLE_SUPPLIERS'\r\n\r\nexport const StoreContext = createContext(null)\r\nconst initialState = {\r\n  totalQuantityToggle: 'total',\r\n  totalQuantityToggleSuppliers: 'total',\r\n  ordersWithTotalSum: [],\r\n  totalOrdersVolume: []\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case TOTAL_QUANTITY_TOGGLE:\r\n      return {\r\n        ...state,\r\n        totalQuantityToggle: action.totalQuantityToggle\r\n      }\r\n    case TOTAL_QUANTITY_TOGGLE_SUPPLIERS:\r\n      return {\r\n        ...state,\r\n        totalQuantityToggleSuppliers: action.totalQuantityToggle\r\n      }\r\n    case SET_ORDERS:\r\n      return {\r\n        ...state,\r\n        ordersWithTotalSum: action.ordersWithTotalSum\r\n      }\r\n    case SET_TOTAL_ORDERS_VOLUME:\r\n      return {\r\n        ...state,\r\n        totalOrdersVolume: action.totalOrdersVolume\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const StoreProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  return (\r\n    <StoreContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </StoreContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useStore = () => useContext(StoreContext)\r\n","import React from 'react'\r\n\r\nimport ToggleButton from '@material-ui/lab/ToggleButton'\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\r\nimport { useStore } from '../store/store'\r\n\r\nimport '../styles/general.styles.css'\r\n\r\nconst ToggleButtons = ({ actionType }) => {\r\n  const { dispatch } = useStore()\r\n\r\n  const [toggle, setToggle] = React.useState('total')\r\n\r\n  //toogle the state according to selected button\r\n  const handleAlignment = (event, selectedToggle) => {\r\n    console.log('newAlignment', selectedToggle)\r\n    if (selectedToggle !== null) {\r\n      setToggle(selectedToggle)\r\n      dispatch({\r\n        type: actionType,\r\n        totalQuantityToggle: selectedToggle\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='margin-T-2'>\r\n      <ToggleButtonGroup value={toggle} exclusive onChange={handleAlignment}>\r\n        <ToggleButton value='total'>volume (‎€)</ToggleButton>\r\n        <ToggleButton value='quantity'>quantity</ToggleButton>\r\n      </ToggleButtonGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToggleButtons\r\n","import _ from 'lodash'\r\n\r\n// we should add field Total = quantity * price from our data\r\n// transform quantity to integer by adding '+'\r\nexport const createOrdersWithTotalSum = orders => {\r\n  const ordersWithSum = orders.map(order => {\r\n    return {\r\n      ...order,\r\n      total: +(order.quantity * order.price),\r\n      quantity: +order.quantity\r\n    }\r\n  })\r\n  return ordersWithSum\r\n}\r\n\r\n// grouping and summing orders by groupOrdersBy for further sorting\r\nexport const groupByArray = (orders, groupOrdersBy) => {\r\n  const grouped = _.groupBy(orders, groupOrdersBy)\r\n\r\n  // console.log('grouped', grouped)\r\n  const totalAndQuantityByKey = _(grouped)\r\n    .map((obj, key) => ({\r\n      productId: key,\r\n      total: _(obj).sumBy('total'),\r\n      quantity: _(obj).sumBy('quantity'),\r\n      productName: obj[0].productName\r\n    }))\r\n    .value()\r\n\r\n  // console.log('totalAndQuantityByKey', totalAndQuantityByKey)\r\n  return totalAndQuantityByKey\r\n}\r\n\r\n// Sort by 'total' or 'quantity' and show desc order of 'numberToDisplay' quantity\r\nexport const sortByValue = (orders, sortBy, numberToDisplay) => {\r\n  const sortedArray = _(orders)\r\n    .orderBy([sortBy], ['desc'])\r\n    .value()\r\n    .slice(0, numberToDisplay)\r\n  // console.log('sortedArray', sortedArray)\r\n  return sortedArray\r\n}\r\n\r\n// transform data for filters dropdown\r\n// for example\r\n// const Countries = [\r\n// { label: 'Albania', value: 355 },\r\n// { label: 'Argentina', value: 54 },\r\n// ]\r\nexport const transformDataForDropdowns = (ordersWithTotalSum, groupName) => {\r\n  const groupedBySupplier = _.groupBy(ordersWithTotalSum, groupName)\r\n\r\n  const groupLabelAndValue = _(groupedBySupplier)\r\n    .map((obj, key) => ({\r\n      label: key,\r\n      value: key\r\n    }))\r\n    .value()\r\n  return groupLabelAndValue\r\n}\r\n\r\n// extract value of filters from {label: \"food\", value: \"food\"} => [\"food\"]\r\n// return empty [] if filters not selected\r\nexport const transformedSelectedFilters = selectedFilters => {\r\n  return (\r\n    selectedFilters?.map(filter => {\r\n      return filter.value\r\n    }) ?? []\r\n  )\r\n}\r\n\r\n// groupBy and summurize Volume (in Eur) or Quantity\r\nexport const groupedBy = (array, groupBy, sumBy, graphType) => {\r\n  const groupByParametr = _.groupBy(array, groupBy)\r\n\r\n  if (graphType === 'line') {\r\n    const transformedWithTotal = _(groupByParametr)\r\n      .map((obj, key) => ({\r\n        // x - orderedOn, y - total\r\n        x: key,\r\n        y: _(_(obj).sumBy(sumBy)).round(2)\r\n      }))\r\n      .value()\r\n    console.log('transformedWithTotal', transformedWithTotal)\r\n    return transformedWithTotal\r\n  } else if (graphType === 'bar') {\r\n    const transformedWithTotal = _(groupByParametr)\r\n      .map((obj, key) => ({\r\n        supplier: key,\r\n        [sumBy]: _(_(obj).sumBy(sumBy)).round(2)\r\n      }))\r\n      .value()\r\n    return transformedWithTotal\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { sortableHandle } from 'react-sortable-hoc'\r\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator'\r\n\r\nimport '../styles/DragHandle.components.css'\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n  <DragIndicatorIcon className='drag-handle' fontSize='large' />\r\n))\r\n\r\nexport default DragHandle\r\n","import React, { useState, useEffect } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { SortableElement } from 'react-sortable-hoc'\r\n\r\nimport { orders } from '../data/orders'\r\nimport ToggleButtons from '../components/ToggleButtons'\r\nimport { useStore, SET_ORDERS, TOTAL_QUANTITY_TOGGLE } from '../store/store'\r\nimport {\r\n  createOrdersWithTotalSum,\r\n  groupByArray,\r\n  sortByValue\r\n} from '../utils/arrays.utils'\r\nimport DragHandle from '../components/DragHandle'\r\n\r\nimport '../styles/card.styles.css'\r\nimport '../styles/general.styles.css'\r\n\r\nconst TopList = () => {\r\n  const { state, dispatch } = useStore()\r\n\r\n  const [groupedByArrayOutput, setGroupedByArrayOutput] = useState([])\r\n  const [sortByArrayOutput, setSortByArrayOutput] = useState([])\r\n\r\n  // we should add field Total = quantity * price from our data\r\n  useEffect(() => {\r\n    const createdOrders = createOrdersWithTotalSum(orders)\r\n    dispatch({ type: SET_ORDERS, ordersWithTotalSum: createdOrders })\r\n  }, [dispatch])\r\n\r\n  // we should resort our data by comaing orders by their IDs\r\n  useEffect(() => {\r\n    const totalAndQuantityByKey = groupByArray(\r\n      state.ordersWithTotalSum,\r\n      'productId'\r\n    )\r\n    setGroupedByArrayOutput(totalAndQuantityByKey)\r\n  }, [state.ordersWithTotalSum])\r\n\r\n  // should show only 3 TOP results\r\n  useEffect(() => {\r\n    const sortedByValue = sortByValue(\r\n      groupedByArrayOutput,\r\n      state.totalQuantityToggle,\r\n      3\r\n    )\r\n    setSortByArrayOutput(sortedByValue)\r\n  }, [state.totalQuantityToggle, groupedByArrayOutput])\r\n\r\n  return (\r\n    <div className='handler'>\r\n      <DragHandle />\r\n      <div className='card-shadow card-container'>\r\n        <h2 className='margin-T-2'>TOP 3 Purchased products</h2>\r\n        <ToggleButtons actionType={TOTAL_QUANTITY_TOGGLE} />\r\n        <div className='margin-TB-5 align-center'>\r\n          {sortByArrayOutput.map((order, index) => {\r\n            return (\r\n              <h5 key={uuidv4()}>\r\n                {index + 1}. {order.productName.toUpperCase()}\r\n              </h5>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortableElement(TopList)\r\n","import React from 'react'\r\nimport { ResponsiveLine } from '@nivo/line'\r\n\r\nconst ResponsiveLineComponent = ({ data }) => {\r\n  return (\r\n    <div style={{ height: 400 }}>\r\n      <ResponsiveLine\r\n        data={data}\r\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n        xScale={{ type: 'point' }}\r\n        yScale={{\r\n          type: 'linear',\r\n          min: 'auto',\r\n          max: 'auto',\r\n          stacked: true,\r\n          reverse: false\r\n        }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n          orient: 'bottom',\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: 'date',\r\n          legendOffset: 36,\r\n          legendPosition: 'middle'\r\n        }}\r\n        axisLeft={{\r\n          orient: 'left',\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: 'total orders (in EUR)',\r\n          legendOffset: -40,\r\n          legendPosition: 'middle'\r\n        }}\r\n        colors={{ scheme: 'category10' }}\r\n        pointSize={10}\r\n        pointColor={{ theme: 'background' }}\r\n        pointBorderWidth={2}\r\n        pointBorderColor={{ from: 'serieColor' }}\r\n        pointLabel='y'\r\n        pointLabelYOffset={-12}\r\n        useMesh={true}\r\n        legends={[\r\n          {\r\n            anchor: 'bottom-right',\r\n            direction: 'column',\r\n            justify: false,\r\n            translateX: 100,\r\n            translateY: 0,\r\n            itemsSpacing: 0,\r\n            itemDirection: 'left-to-right',\r\n            itemWidth: 80,\r\n            itemHeight: 20,\r\n            itemOpacity: 0.75,\r\n            symbolSize: 12,\r\n            symbolShape: 'circle',\r\n            symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n            effects: [\r\n              {\r\n                on: 'hover',\r\n                style: {\r\n                  itemBackground: 'rgba(0, 0, 0, .03)',\r\n                  itemOpacity: 1\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        ]}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResponsiveLineComponent\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useStore, SET_TOTAL_ORDERS_VOLUME } from '../store/store'\r\nimport Select from 'react-select'\r\nimport { SortableElement } from 'react-sortable-hoc'\r\n\r\nimport {\r\n  transformDataForDropdowns,\r\n  transformedSelectedFilters,\r\n  groupedBy\r\n} from '../utils/arrays.utils'\r\nimport ResponsiveLineComponent from '../components/ResponsiveLine'\r\nimport DragHandle from '../components/DragHandle'\r\n\r\nimport '../styles/card.styles.css'\r\nimport '../styles/general.styles.css'\r\nimport '../styles/TotalOrderVolume.components.css'\r\n\r\nconst TotalOrderVolume = () => {\r\n  // +++++++++++++++++++++++++++++++++++++++++++++\r\n  // STATES\r\n  const { state, dispatch } = useStore()\r\n  const ordersWithTotalSum = state.ordersWithTotalSum\r\n  const [suppliersForFiltering, setSuppliersForFiltering] = useState([])\r\n  const [categoryForFiltering, setCategoryForFiltering] = useState([])\r\n  const [subCategoryForFiltering, setSubCategoryForFiltering] = useState([])\r\n  const [selectedFilters, setSelectedFilters] = useState({\r\n    suppliers: [],\r\n    productCategory1: [],\r\n    productCategory2: []\r\n  })\r\n  const [filteredOrdersOutput, setFilteredOrdersOutput] = useState(\r\n    ordersWithTotalSum\r\n  )\r\n\r\n  // +++++++++++++++++++++++++++++++++++++++++++++\r\n  // transform orders data for graph presentation\r\n  useEffect(() => {\r\n    // if filters not selected we should reset initial data to 'ordersWithTotalSum',\r\n    // else - show filtered data\r\n    if (\r\n      selectedFilters.suppliers.length === 0 &&\r\n      selectedFilters.productCategory1.length === 0 &&\r\n      selectedFilters.productCategory2.length === 0\r\n    ) {\r\n      setFilteredOrdersOutput(ordersWithTotalSum)\r\n    }\r\n\r\n    // group data by Date (orderedOn)\r\n    const orderedOnAndTotal = groupedBy(\r\n      filteredOrdersOutput,\r\n      'orderedOn',\r\n      'total',\r\n      'line'\r\n    )\r\n\r\n    // +++++++++++++++++++++++++++++++++++++++++++++\r\n    // transform data according to ResponsiveLine component\r\n    // https://nivo.rocks/line/ -> tab 'data'\r\n    let formatedArrayForGraph = []\r\n    formatedArrayForGraph.push({\r\n      id: 'orders',\r\n      data: orderedOnAndTotal\r\n    })\r\n\r\n    // set data to global store\r\n    dispatch({\r\n      type: SET_TOTAL_ORDERS_VOLUME,\r\n      totalOrdersVolume: formatedArrayForGraph\r\n    })\r\n  }, [filteredOrdersOutput, dispatch, ordersWithTotalSum])\r\n\r\n  // +++++++++++++++++++++++++++++++++++++++++++++\r\n  // transform data for filters dropdown\r\n  useEffect(() => {\r\n    // SUPLLIERS\r\n    const suppliers = transformDataForDropdowns(\r\n      filteredOrdersOutput,\r\n      'supplier'\r\n    )\r\n    setSuppliersForFiltering(suppliers)\r\n\r\n    // CATEGORY\r\n    const category = transformDataForDropdowns(\r\n      filteredOrdersOutput,\r\n      'productCategory1'\r\n    )\r\n    setCategoryForFiltering(category)\r\n\r\n    // SUBCATEGORY\r\n    let outputArray\r\n    if (\r\n      selectedFilters.suppliers.length === 0 &&\r\n      selectedFilters.productCategory1.length === 0\r\n    ) {\r\n      outputArray = ordersWithTotalSum\r\n    } else {\r\n      outputArray = filteredOrdersOutput\r\n    }\r\n    const subCategory = transformDataForDropdowns(\r\n      outputArray,\r\n      'productCategory2'\r\n    )\r\n    setSubCategoryForFiltering(subCategory)\r\n  }, [ordersWithTotalSum, filteredOrdersOutput])\r\n\r\n  // +++++++++++++++++++++++++++++++++++++++++++++\r\n  // filtering data for graph with filters\r\n  useEffect(() => {\r\n    const filreredOrdersWithTotalSum = ordersWithTotalSum.filter(\r\n      ({ supplier, productCategory1, productCategory2 }) => {\r\n        const isSupplierFiltered = !!selectedFilters.suppliers.length\r\n          ? selectedFilters.suppliers.includes(supplier)\r\n          : true\r\n        const isCategoryFiltered = selectedFilters.productCategory1.length\r\n          ? selectedFilters.productCategory1.includes(productCategory1)\r\n          : true\r\n        const isSubCategoryFiltered = selectedFilters.productCategory2.length\r\n          ? selectedFilters.productCategory2.includes(productCategory2)\r\n          : true\r\n        return (\r\n          // return true if filter is empty\r\n          isSupplierFiltered && isCategoryFiltered && isSubCategoryFiltered\r\n        )\r\n      }\r\n    )\r\n    setFilteredOrdersOutput(filreredOrdersWithTotalSum)\r\n  }, [selectedFilters, ordersWithTotalSum])\r\n\r\n  // +++++++++++++++++++++++++++++++++++++++++++++\r\n  // HANDLERS FOR DROPDOWN MENUS\r\n  // handler when Supplier is chosen\r\n  const supplierFilterOnChangeHandler = selectedSuppliers => {\r\n    // return empty [] if filters not selected\r\n    const transformedSelectedSuppliers = transformedSelectedFilters(\r\n      selectedSuppliers\r\n    )\r\n\r\n    setSelectedFilters(prevState => {\r\n      return {\r\n        ...prevState,\r\n        suppliers: transformedSelectedSuppliers\r\n      }\r\n    })\r\n  }\r\n\r\n  // handler when Category is chosen\r\n  const categoryFilterOnChangeHandler = selectedCategories => {\r\n    // return empty [] if filters not selected\r\n    const transformedSelectedCategories = transformedSelectedFilters(\r\n      selectedCategories\r\n    )\r\n\r\n    setSelectedFilters(prevState => {\r\n      return {\r\n        ...prevState,\r\n        productCategory1: transformedSelectedCategories\r\n      }\r\n    })\r\n  }\r\n\r\n  // handler when subCategory is chosen\r\n  const subCategoryFilterOnChangeHandler = selectedSubCategories => {\r\n    // return empty [] if filters not selected\r\n    const transformedSelectedSubCategories = transformedSelectedFilters(\r\n      selectedSubCategories\r\n    )\r\n\r\n    setSelectedFilters(prevState => {\r\n      return {\r\n        ...prevState,\r\n        productCategory2: transformedSelectedSubCategories\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='handler'>\r\n      <DragHandle />\r\n      <div className='card-shadow card-container'>\r\n        <h2 className='margin-T-2'>Total Order Volume</h2>\r\n        <div className='dropdown-menu-container margin-T-2'>\r\n          <Select\r\n            className='dropdown-menu-item'\r\n            placeholder='Select supplier'\r\n            options={suppliersForFiltering}\r\n            isMulti\r\n            onChange={e => supplierFilterOnChangeHandler(e)}\r\n          />\r\n          <Select\r\n            className='dropdown-menu-item'\r\n            placeholder='Select category'\r\n            options={categoryForFiltering}\r\n            isMulti\r\n            onChange={e => categoryFilterOnChangeHandler(e)}\r\n          />\r\n          <Select\r\n            className='dropdown-menu-item'\r\n            placeholder='Select subcategory'\r\n            options={subCategoryForFiltering}\r\n            isMulti\r\n            onChange={e => subCategoryFilterOnChangeHandler(e)}\r\n          />\r\n        </div>\r\n        <div className='graph-container'>\r\n          <ResponsiveLineComponent data={state.totalOrdersVolume} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortableElement(TotalOrderVolume)\r\n","import React from 'react'\r\nimport { ResponsiveBar } from '@nivo/bar'\r\n\r\nimport { useStore } from '../store/store'\r\n\r\nconst ResponsiveBarComponent = ({ data }) => {\r\n  const { state } = useStore()\r\n\r\n  return (\r\n    <div style={{ height: 400 }}>\r\n      <ResponsiveBar\r\n        data={data}\r\n        keys={[state.totalQuantityToggleSuppliers]}\r\n        indexBy='supplier'\r\n        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n        padding={0.3}\r\n        colors={{ scheme: 'category10' }}\r\n        defs={[\r\n          {\r\n            id: 'dots',\r\n            type: 'patternDots',\r\n            background: 'inherit',\r\n            color: '#38bcb2',\r\n            size: 4,\r\n            padding: 1,\r\n            stagger: true\r\n          },\r\n          {\r\n            id: 'lines',\r\n            type: 'patternLines',\r\n            background: 'inherit',\r\n            color: '#eed312',\r\n            rotation: -45,\r\n            lineWidth: 6,\r\n            spacing: 10\r\n          }\r\n        ]}\r\n        fill={[\r\n          {\r\n            match: {\r\n              id: 'fries'\r\n            },\r\n            id: 'dots'\r\n          },\r\n          {\r\n            match: {\r\n              id: 'sandwich'\r\n            },\r\n            id: 'lines'\r\n          }\r\n        ]}\r\n        borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: 'supplier',\r\n          legendPosition: 'middle',\r\n          legendOffset: 32\r\n        }}\r\n        axisLeft={{\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: state.totalQuantityToggleSuppliers,\r\n          legendPosition: 'middle',\r\n          legendOffset: -40\r\n        }}\r\n        labelSkipWidth={12}\r\n        labelSkipHeight={12}\r\n        labelTextColor='#fff'\r\n        legends={[\r\n          {\r\n            dataFrom: 'keys',\r\n            anchor: 'bottom-right',\r\n            direction: 'column',\r\n            justify: false,\r\n            translateX: 120,\r\n            translateY: 0,\r\n            itemsSpacing: 2,\r\n            itemWidth: 100,\r\n            itemHeight: 20,\r\n            itemDirection: 'left-to-right',\r\n            itemOpacity: 0.85,\r\n            symbolSize: 20,\r\n            effects: [\r\n              {\r\n                on: 'hover',\r\n                style: {\r\n                  itemOpacity: 1\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        ]}\r\n        animate={true}\r\n        motionStiffness={90}\r\n        motionDamping={15}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResponsiveBarComponent\r\n","import React, { useEffect, useState } from 'react'\r\nimport { SortableElement } from 'react-sortable-hoc'\r\n\r\nimport ToggleButtons from '../components/ToggleButtons'\r\nimport { useStore, TOTAL_QUANTITY_TOGGLE_SUPPLIERS } from '../store/store'\r\nimport { groupedBy } from '../utils/arrays.utils'\r\nimport ResponsiveBarComponent from '../components/ResponsiveBar'\r\nimport DragHandle from '../components/DragHandle'\r\n\r\nimport '../styles/card.styles.css'\r\nimport '../styles/general.styles.css'\r\n\r\nconst SupplierRank = () => {\r\n  // +++++++++++++++++++++++++++++++++++++++++++++\r\n  // STATES\r\n  const { state } = useStore()\r\n  const [data, setData] = useState()\r\n  const ordersWithTotalSum = state.ordersWithTotalSum\r\n\r\n  useEffect(() => {\r\n    console.log('ordersWithTotalSum', ordersWithTotalSum)\r\n    const groupedBySupplier = groupedBy(\r\n      ordersWithTotalSum,\r\n      'supplier',\r\n      state.totalQuantityToggleSuppliers,\r\n      'bar'\r\n    )\r\n    console.log('groupedBySupplier', groupedBySupplier)\r\n    setData(groupedBySupplier)\r\n  }, [ordersWithTotalSum, state.totalQuantityToggleSuppliers])\r\n\r\n  return (\r\n    <div className='handler'>\r\n      <DragHandle />\r\n      <div className='card-shadow card-container'>\r\n        <h2 className='margin-T-2'>SupplierRank</h2>\r\n        <ToggleButtons actionType={TOTAL_QUANTITY_TOGGLE_SUPPLIERS} />\r\n        <div className='graph-container'>\r\n          <ResponsiveBarComponent data={data} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortableElement(SupplierRank)\r\n","import React from 'react'\r\nimport TreeView from '@material-ui/lab/TreeView'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport TreeItem from '@material-ui/lab/TreeItem'\r\n\r\nimport '../styles/TreeItem.components.css'\r\n\r\nconst TreeViewComponent = ({ data }) => {\r\n  const renderTree = nodes => (\r\n    <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\r\n      {Array.isArray(nodes.children)\r\n        ? nodes.children.map(node => renderTree(node))\r\n        : null}\r\n    </TreeItem>\r\n  )\r\n\r\n  return (\r\n    <div className='tree-container'>\r\n      <TreeView\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpanded={['root']}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n      >\r\n        {renderTree(data)}\r\n      </TreeView>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TreeViewComponent\r\n","import React, { useEffect, useState } from 'react'\r\nimport _ from 'lodash'\r\nimport { SortableElement } from 'react-sortable-hoc'\r\n\r\nimport { useStore } from '../store/store'\r\nimport TreeItemComponent from '../components/TreeItem'\r\nimport DragHandle from '../components/DragHandle'\r\n\r\nimport '../styles/card.styles.css'\r\nimport '../styles/general.styles.css'\r\n\r\nconst DeliveryList = () => {\r\n  const { state } = useStore()\r\n  const ordersWithTotalSum = state.ordersWithTotalSum\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  useEffect(() => {\r\n    const groupByParametr = _.groupBy(ordersWithTotalSum, 'orderedOn')\r\n    console.log('groupByParametr', groupByParametr)\r\n    const groupBySupplier = _(groupByParametr)\r\n      .map((obj, key) => {\r\n        //group products\r\n        const group = _(obj)\r\n          .groupBy('supplier')\r\n          .map((obj, key) => {\r\n            console.log('obj.productId', obj)\r\n            return {\r\n              id: key,\r\n              name: key,\r\n              children: [\r\n                {\r\n                  id: obj[0].productId,\r\n                  name: obj[0].productName\r\n                }\r\n              ]\r\n            }\r\n          })\r\n          .value()\r\n        console.log('group', group)\r\n        // group by supplier\r\n        return {\r\n          id: key,\r\n          name: key,\r\n          children: group\r\n        }\r\n      })\r\n      .value()\r\n    console.log('groupBySupplier', groupBySupplier)\r\n\r\n    // combine to Root object\r\n    const toObject = {\r\n      id: 'root',\r\n      name: 'Orders by day',\r\n      children: groupBySupplier\r\n    }\r\n    console.log('toObject', toObject)\r\n    setData(toObject)\r\n  }, [ordersWithTotalSum])\r\n\r\n  return (\r\n    <div className='handler'>\r\n      <DragHandle />\r\n      <div className='card-shadow card-container'>\r\n        <h2 className='margin-T-2'>Delivery List</h2>\r\n        <div style={{ height: '100%', minHeight: '250px' }}>\r\n          {data.length !== 0 && <TreeItemComponent data={data} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortableElement(DeliveryList)\r\n","import React from 'react'\r\nimport { SortableContainer } from 'react-sortable-hoc'\r\n\r\nconst DraggableComponents = SortableContainer(({ components }) => {\r\n  return (\r\n    <div>\r\n      {components.map((Component, index) => {\r\n        return {\r\n          ...Component,\r\n          props: { ...Component.props, index: index }\r\n        }\r\n      })}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default DraggableComponents\r\n","import React, { useState } from 'react'\n\nimport TopList from './screens/TopList'\nimport TotalOrderVolume from './screens/TotalOrderVolume'\nimport SupplierRank from './screens/SupplierRank'\nimport DeliveryList from './screens/DeliveryList'\nimport arrayMove from 'array-move'\n\nimport DraggableComponent from './components/DraggableComponents'\n\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst App = () => {\n  const [components, setComponents] = useState([\n    <TopList index={1} key={1} />,\n    <TotalOrderVolume index={2} key={2} />,\n    <SupplierRank index={3} key={3} />,\n    <DeliveryList index={4} key={4} />\n  ])\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    setComponents(arrayMove(components, oldIndex, newIndex))\n  }\n  return (\n    <div className='App'>\n      <DraggableComponent\n        useDragHandle\n        components={components}\n        onSortEnd={onSortEnd}\n      />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { StoreProvider } from './store/store'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}